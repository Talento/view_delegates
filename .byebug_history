c
hello_world
c
hello_world
c
expect(a).to match /hello world/
a.should
a.should contain('hello world')
a.should.contain('hello world')
a.should.contain('hello world'
a.should
a.contain
a = delegate.render(:index)
c
a
a = delegate.render(:index)
rendered
renderer
c
view.to_s
view
c
instance_variable_get("@dummy")
instance_variable_get(:dummy)
self
c
delegate.dummy.to_h
delegate.dummy.members
delegate.dummy.attributes
delegate.dummy
delegate
c
model_delegate.members
model_delegate
c
instance_variable_get  :@dummy
@dummy
c
@@ar_models
c
test_method
c
test_method
c
@test_method
test_method
c
@@view_methods
self.view_methods
c
self.instance_methods
self.methods
c
a
ActionView::PathSet.new
c
self.assets_dir
c
self.view_paths
c
self.view_paths
c
self.view_paths
c
self.view_paths
exit
self.view_paths
self
c
self.class
c
ActionView::Renderer.new(@lookup_context).render context, options
c
ActionView::Renderer.new(@lookup_context).render_to_string context
c
@lookup_context.exists? :index
@lookup_context.exists?
@lookup_context
c
model
self.model
c
exit
c
self.model
c
self.class.base_class
self.class
self.base_class
